@import (reference) '../../styles/variables.less';
@import (reference) '../../styles/mixins.less';

@Button-size-padding: 8px;
@Button-size-height: @size-standard-height;
@Button-size-height-small: @size-standard-height - 8;
@Button-size-height-large: @size-standard-height + 12;
@Button-size-borderRadius: @size-borderRadius;

.lucid-Button {
	// Mixins
	.no-safari-flicker();
	.box-sizing();
	background-color: @featured-color-default-backgroundColor;

	cursor: pointer;
	height: @Button-size-height;
	border: 1px solid @featured-color-default-borderColor;
	border-radius: @Button-size-borderRadius;
	font-size: @fontSize;
	font-family: @fontFamily;
	font-weight: @font-weight-medium;
	letter-spacing: 0.05em;
	padding: 0 @Button-size-padding;
	outline: none;
	color: @featured-color-default;

	// from normalize.css@4.1.1
	margin: 0; /* 2 */
	overflow: visible;
	text-transform: none;
	-webkit-appearance: button; /* 2 */
	// end normalize

	white-space: nowrap;

	&:hover:not(&-is-disabled) {
		background-color: @featured-color-default-backgroundColorHover;
	}
	&:active:not(&-is-disabled) {
		background-color: @featured-color-default-backgroundColorFocus;
	}

	// don't show Firefox's focus ring: https://github.com/appnexus/lucid/issues/292
	&::-moz-focus-inner {
		border: 0;
	}

	&::before { border-radius: @Button-size-borderRadius; }

	&&-has-only-icon {
		padding: 0 5px;
		.lucid-Button-content > .lucid-Icon {
			margin-right: 0;
		}
	}

	& &-content {
		display: flex;
		justify-content: center;
		align-items: center;
		height: 100%;

		> .lucid-Icon {
			transition: color @timing-animation-hover, fill @timing-animation-hover;
			margin-right: 5px;
		}

		> span {
			transition: color @timing-animation-hover, fill @timing-animation-hover;
		}
	}

	// Types
	&&-primary {
		.make-is-disabled(lucid-Button);
		.bold();

		background-color: @featured-color-primary-backgroundColor;
		border-color: @featured-color-primary-borderColor;
		color: @color-white;

		.lucid-Icon { fill: @color-white; }

		&:hover:not(.lucid-Button-is-disabled) {
			background-color: @featured-color-primary-backgroundColor;
			.opacity(@opacity-hover);
		}
		&:active:not(.lucid-Button-is-disabled) {
			background-color: @featured-color-primary-backgroundColor;
			.opacity(1);
		}
	}

	&&-danger {
		.make-is-disabled(lucid-Button);
		.bold();

		background-color: @featured-color-danger-backgroundColor;
		border-color: @featured-color-danger-borderColor;
		color: @color-white;

		.lucid-Icon { fill: @color-white; }

		&:hover:not(.lucid-Button-is-disabled) {
			background-color: @featured-color-danger-backgroundColor;
			.opacity(@opacity-hover);
		}
		&:active:not(.lucid-Button-is-disabled) {
			background-color: @featured-color-danger-backgroundColor;
			.opacity(1);
		}
	}

	&&-link {
		.make-is-disabled(lucid-Button);

		border: none;
		background: none;
		padding: 0;

		&:hover,
		&:active,
		&:focus {
			background-color: @featured-color-default-backgroundColor;
			text-decoration: underline;
		}

		&:active::before {
			opacity: 0;
		}

		.lucid-Button-content {
			line-height: 1em;
		}

		.lucid-Icon {
			fill: @color-primary;
			margin-right: 0.25em;

			+ span {
				line-height: 1.4em;
			}
		}
	}

	&&-link&-has-only-icon {
		// Clear the right margin, only need it if the has text with it
		.lucid-Icon {
			margin-right: 0;
		}
	}

	&&-invisible {
		.gradient-reset();
		.make-is-disabled(lucid-Button);

		border: none;
		background: none;



		&:active::before {
			opacity: 0;
		}

		.lucid-Button-content {
			line-height: 1em;
		}

		.lucid-Icon {
			fill: @color-primary;
			margin-right: 0.25em;

			+ span {
				line-height: 1.4em;
			}
		}
	}

	// Sizes
	&&-short {
		height: @Button-size-height-small;
	}

	&&-small {
		height: @Button-size-height-small;
		padding: 0 @Button-size-padding/1.5;
	}

	&&-small&-has-only-icon {
		padding: 0 1px;
	}

	&&-large {
		height: @Button-size-height-large;
		padding: 0 @Button-size-padding*1.5;
		font-size: 1.2em;

		.lucid-Icon {
			width: 1.2em;
			height: 1.2em;
		}
	}

	&&-large&-has-only-icon {
		padding: 0 8px;
	}

	// States
	&&-is-active {
		background-color: @featured-color-default-backgroundColorFocus;
	}

	&&-is-active&-primary {
		background: @featured-color-primary;
		border-color: @featured-color-primary;
	}


	&&-is-active&-danger {
		border-color: @featured-color-danger-borderColor;
		background: @featured-color-danger;
	}

	&-is-disabled {
		.opacity(@opacity-disabled);
		.no-cursor();
	}

	// Also needed in some cases to beat other libraries (e.g. pure.css)
	&[disabled] {
		.no-cursor();
	}
}

